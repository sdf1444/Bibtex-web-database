{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport { createShorthandFactory, customPropTypes } from '../../lib';\nimport AccordionTitle from './AccordionTitle';\nimport AccordionContent from './AccordionContent';\n/**\n * A panel sub-component for Accordion component.\n */\n\nvar AccordionPanel = /*#__PURE__*/\nfunction (_Component) {\n  _inherits(AccordionPanel, _Component);\n  function AccordionPanel() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, AccordionPanel);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AccordionPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_this), \"handleTitleOverrides\", function (predefinedProps) {\n      return {\n        onClick: function onClick(e, titleProps) {\n          _invoke(predefinedProps, 'onClick', e, titleProps);\n          _invoke(_this.props, 'onTitleClick', e, titleProps);\n        }\n      };\n    });\n    return _this;\n  }\n  _createClass(AccordionPanel, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        active = _this$props.active,\n        content = _this$props.content,\n        index = _this$props.index,\n        title = _this$props.title;\n      return React.createElement(Fragment, null, AccordionTitle.create(title, {\n        autoGenerateKey: false,\n        defaultProps: {\n          active: active,\n          index: index\n        },\n        overrideProps: this.handleTitleOverrides\n      }), AccordionContent.create(content, {\n        autoGenerateKey: false,\n        defaultProps: {\n          active: active\n        }\n      }));\n    }\n  }]);\n  return AccordionPanel;\n}(Component);\n_defineProperty(AccordionPanel, \"handledProps\", [\"active\", \"content\", \"index\", \"onTitleClick\", \"title\"]);\nAccordionPanel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Whether or not the title is in the open state. */\n  active: PropTypes.bool,\n  /** A shorthand for Accordion.Content. */\n  content: customPropTypes.itemShorthand,\n  /** A panel index. */\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onTitleClick: PropTypes.func,\n  /** A shorthand for Accordion.Title. */\n  title: customPropTypes.itemShorthand\n} : {};\nAccordionPanel.create = createShorthandFactory(AccordionPanel, null);\nexport default AccordionPanel;","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","_invoke","PropTypes","React","Component","Fragment","createShorthandFactory","customPropTypes","AccordionTitle","AccordionContent","AccordionPanel","_Component","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","call","apply","concat","predefinedProps","onClick","e","titleProps","props","key","value","render","_this$props","active","content","index","title","createElement","create","autoGenerateKey","defaultProps","overrideProps","handleTitleOverrides","propTypes","process","env","NODE_ENV","bool","itemShorthand","oneOfType","number","string","onTitleClick","func"],"sources":["/home/spencer/Personal/Bibtex-web-database-master/client/node_modules/semantic-ui-react/dist/es/modules/Accordion/AccordionPanel.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport { createShorthandFactory, customPropTypes } from '../../lib';\nimport AccordionTitle from './AccordionTitle';\nimport AccordionContent from './AccordionContent';\n/**\n * A panel sub-component for Accordion component.\n */\n\nvar AccordionPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AccordionPanel, _Component);\n\n  function AccordionPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AccordionPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AccordionPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTitleOverrides\", function (predefinedProps) {\n      return {\n        onClick: function onClick(e, titleProps) {\n          _invoke(predefinedProps, 'onClick', e, titleProps);\n\n          _invoke(_this.props, 'onTitleClick', e, titleProps);\n        }\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(AccordionPanel, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          content = _this$props.content,\n          index = _this$props.index,\n          title = _this$props.title;\n      return React.createElement(Fragment, null, AccordionTitle.create(title, {\n        autoGenerateKey: false,\n        defaultProps: {\n          active: active,\n          index: index\n        },\n        overrideProps: this.handleTitleOverrides\n      }), AccordionContent.create(content, {\n        autoGenerateKey: false,\n        defaultProps: {\n          active: active\n        }\n      }));\n    }\n  }]);\n\n  return AccordionPanel;\n}(Component);\n\n_defineProperty(AccordionPanel, \"handledProps\", [\"active\", \"content\", \"index\", \"onTitleClick\", \"title\"]);\n\nAccordionPanel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Whether or not the title is in the open state. */\n  active: PropTypes.bool,\n\n  /** A shorthand for Accordion.Content. */\n  content: customPropTypes.itemShorthand,\n\n  /** A panel index. */\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onTitleClick: PropTypes.func,\n\n  /** A shorthand for Accordion.Title. */\n  title: customPropTypes.itemShorthand\n} : {};\nAccordionPanel.create = createShorthandFactory(AccordionPanel, null);\nexport default AccordionPanel;"],"mappings":"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"},"metadata":{},"sourceType":"module"}