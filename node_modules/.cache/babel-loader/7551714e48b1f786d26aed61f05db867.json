{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n    children = props.children,\n    className = props.className,\n    content = props.content,\n    doubling = props.doubling,\n    items = props.items,\n    itemsPerRow = props.itemsPerRow,\n    stackable = props.stackable,\n    textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","map":{"version":3,"names":["_extends","_without","_map","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useTextAlignProp","useWidthProp","Card","CardGroup","props","centered","children","className","content","doubling","items","itemsPerRow","stackable","textAlign","classes","rest","ElementType","isNil","createElement","itemsJSX","item","key","header","description","join","handledProps","propTypes","process","env","NODE_ENV","as","elementType","bool","node","string","contentShorthand","collectionShorthand","oneOf","WIDTHS","TEXT_ALIGNMENTS"],"sources":["/home/spencer/Personal/Bibtex-web-database-master/client/node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;"],"mappings":"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"},"metadata":{},"sourceType":"module"}