{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _uniq from \"lodash/uniq\";\nimport _isArray from \"lodash/isArray\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isNumber from \"lodash/isNumber\";\nimport _isString from \"lodash/isString\";\nimport _isBoolean from \"lodash/isBoolean\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport React, { cloneElement, isValidElement } from 'react'; // ============================================================\n// Factories\n// ============================================================\n\n/**\n * A more robust React.createElement. It can create elements from primitive values.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @param {string|object|function} val The value to create a ReactElement from\n * @param {Object} [options={}]\n * @param {object} [options.defaultProps={}] Default props object\n * @param {object|function} [options.overrideProps={}] Override props object or function (called with regular props)\n * @param {boolean} [options.autoGenerateKey=true] Whether or not automatic key generation is allowed\n * @returns {object|null}\n */\n\nexport function createShorthand(Component, mapValueToProps, val) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthand() Component must be a string or function.');\n  } // short circuit noop values\n\n  if (_isNil(val) || _isBoolean(val)) return null;\n  var valIsString = _isString(val);\n  var valIsNumber = _isNumber(val);\n  var valIsFunction = _isFunction(val);\n  var valIsReactElement = isValidElement(val);\n  var valIsPropsObject = _isPlainObject(val);\n  var valIsPrimitiveValue = valIsString || valIsNumber || _isArray(val); // unhandled type return null\n\n  /* eslint-disable no-console */\n\n  if (!valIsFunction && !valIsReactElement && !valIsPropsObject && !valIsPrimitiveValue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(['Shorthand value must be a string|number|array|object|ReactElement|function.', ' Use null|undefined|boolean for none', \" Received \".concat(_typeof(val), \".\")].join(''));\n    }\n    return null;\n  }\n  /* eslint-enable no-console */\n  // ----------------------------------------\n  // Build up props\n  // ----------------------------------------\n\n  var _options$defaultProps = options.defaultProps,\n    defaultProps = _options$defaultProps === void 0 ? {} : _options$defaultProps; // User's props\n\n  var usersProps = valIsReactElement && val.props || valIsPropsObject && val || valIsPrimitiveValue && mapValueToProps(val); // Override props\n\n  var _options$overrideProp = options.overrideProps,\n    overrideProps = _options$overrideProp === void 0 ? {} : _options$overrideProp;\n  overrideProps = _isFunction(overrideProps) ? overrideProps(_objectSpread({}, defaultProps, usersProps)) : overrideProps; // Merge props\n\n  /* eslint-disable react/prop-types */\n\n  var props = _objectSpread({}, defaultProps, usersProps, overrideProps); // Merge className\n\n  if (defaultProps.className || overrideProps.className || usersProps.className) {\n    var mergedClassesNames = cx(defaultProps.className, overrideProps.className, usersProps.className);\n    props.className = _uniq(mergedClassesNames.split(' ')).join(' ');\n  } // Merge style\n\n  if (defaultProps.style || overrideProps.style || usersProps.style) {\n    props.style = _objectSpread({}, defaultProps.style, usersProps.style, overrideProps.style);\n  } // ----------------------------------------\n  // Get key\n  // ----------------------------------------\n  // Use key, childKey, or generate key\n\n  if (_isNil(props.key)) {\n    var childKey = props.childKey;\n    var _options$autoGenerate = options.autoGenerateKey,\n      autoGenerateKey = _options$autoGenerate === void 0 ? true : _options$autoGenerate;\n    if (!_isNil(childKey)) {\n      // apply and consume the childKey\n      props.key = typeof childKey === 'function' ? childKey(props) : childKey;\n      delete props.childKey;\n    } else if (autoGenerateKey && (valIsString || valIsNumber)) {\n      // use string/number shorthand values as the key\n      props.key = val;\n    }\n  } // ----------------------------------------\n  // Create Element\n  // ----------------------------------------\n  // Clone ReactElements\n\n  if (valIsReactElement) return cloneElement(val, props); // Create ReactElements from built up props\n\n  if (valIsPrimitiveValue || valIsPropsObject) return React.createElement(Component, props); // Call functions with args similar to createElement()\n\n  if (valIsFunction) return val(Component, props, props.children);\n  /* eslint-enable react/prop-types */\n} // ============================================================\n// Factory Creators\n// ============================================================\n\n/**\n * Creates a `createShorthand` function that is waiting for a value and options.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @returns {function} A shorthand factory function waiting for `val` and `defaultProps`.\n */\n\ncreateShorthand.handledProps = [];\nexport function createShorthandFactory(Component, mapValueToProps) {\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthandFactory() Component must be a string or function.');\n  }\n  return function (val, options) {\n    return createShorthand(Component, mapValueToProps, val, options);\n  };\n} // ============================================================\n// HTML Factories\n// ============================================================\n\nexport var createHTMLDivision = createShorthandFactory('div', function (val) {\n  return {\n    children: val\n  };\n});\nexport var createHTMLIframe = createShorthandFactory('iframe', function (src) {\n  return {\n    src: src\n  };\n});\nexport var createHTMLImage = createShorthandFactory('img', function (val) {\n  return {\n    src: val\n  };\n});\nexport var createHTMLInput = createShorthandFactory('input', function (val) {\n  return {\n    type: val\n  };\n});\nexport var createHTMLLabel = createShorthandFactory('label', function (val) {\n  return {\n    children: val\n  };\n});\nexport var createHTMLParagraph = createShorthandFactory('p', function (val) {\n  return {\n    children: val\n  };\n});","map":{"version":3,"names":["_objectSpread","_typeof","_uniq","_isArray","_isPlainObject","_isFunction","_isNumber","_isString","_isBoolean","_isNil","cx","React","cloneElement","isValidElement","createShorthand","Component","mapValueToProps","val","options","arguments","length","undefined","Error","valIsString","valIsNumber","valIsFunction","valIsReactElement","valIsPropsObject","valIsPrimitiveValue","process","env","NODE_ENV","console","error","concat","join","_options$defaultProps","defaultProps","usersProps","props","_options$overrideProp","overrideProps","className","mergedClassesNames","split","style","key","childKey","_options$autoGenerate","autoGenerateKey","createElement","children","handledProps","createShorthandFactory","createHTMLDivision","createHTMLIframe","src","createHTMLImage","createHTMLInput","type","createHTMLLabel","createHTMLParagraph"],"sources":["/home/spencer/Personal/Bibtex-web-database-master/client/node_modules/semantic-ui-react/dist/es/lib/factories.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _uniq from \"lodash/uniq\";\nimport _isArray from \"lodash/isArray\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isNumber from \"lodash/isNumber\";\nimport _isString from \"lodash/isString\";\nimport _isBoolean from \"lodash/isBoolean\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport React, { cloneElement, isValidElement } from 'react'; // ============================================================\n// Factories\n// ============================================================\n\n/**\n * A more robust React.createElement. It can create elements from primitive values.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @param {string|object|function} val The value to create a ReactElement from\n * @param {Object} [options={}]\n * @param {object} [options.defaultProps={}] Default props object\n * @param {object|function} [options.overrideProps={}] Override props object or function (called with regular props)\n * @param {boolean} [options.autoGenerateKey=true] Whether or not automatic key generation is allowed\n * @returns {object|null}\n */\n\nexport function createShorthand(Component, mapValueToProps, val) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthand() Component must be a string or function.');\n  } // short circuit noop values\n\n\n  if (_isNil(val) || _isBoolean(val)) return null;\n\n  var valIsString = _isString(val);\n\n  var valIsNumber = _isNumber(val);\n\n  var valIsFunction = _isFunction(val);\n\n  var valIsReactElement = isValidElement(val);\n\n  var valIsPropsObject = _isPlainObject(val);\n\n  var valIsPrimitiveValue = valIsString || valIsNumber || _isArray(val); // unhandled type return null\n\n  /* eslint-disable no-console */\n\n\n  if (!valIsFunction && !valIsReactElement && !valIsPropsObject && !valIsPrimitiveValue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(['Shorthand value must be a string|number|array|object|ReactElement|function.', ' Use null|undefined|boolean for none', \" Received \".concat(_typeof(val), \".\")].join(''));\n    }\n\n    return null;\n  }\n  /* eslint-enable no-console */\n  // ----------------------------------------\n  // Build up props\n  // ----------------------------------------\n\n\n  var _options$defaultProps = options.defaultProps,\n      defaultProps = _options$defaultProps === void 0 ? {} : _options$defaultProps; // User's props\n\n  var usersProps = valIsReactElement && val.props || valIsPropsObject && val || valIsPrimitiveValue && mapValueToProps(val); // Override props\n\n  var _options$overrideProp = options.overrideProps,\n      overrideProps = _options$overrideProp === void 0 ? {} : _options$overrideProp;\n  overrideProps = _isFunction(overrideProps) ? overrideProps(_objectSpread({}, defaultProps, usersProps)) : overrideProps; // Merge props\n\n  /* eslint-disable react/prop-types */\n\n  var props = _objectSpread({}, defaultProps, usersProps, overrideProps); // Merge className\n\n\n  if (defaultProps.className || overrideProps.className || usersProps.className) {\n    var mergedClassesNames = cx(defaultProps.className, overrideProps.className, usersProps.className);\n    props.className = _uniq(mergedClassesNames.split(' ')).join(' ');\n  } // Merge style\n\n\n  if (defaultProps.style || overrideProps.style || usersProps.style) {\n    props.style = _objectSpread({}, defaultProps.style, usersProps.style, overrideProps.style);\n  } // ----------------------------------------\n  // Get key\n  // ----------------------------------------\n  // Use key, childKey, or generate key\n\n\n  if (_isNil(props.key)) {\n    var childKey = props.childKey;\n    var _options$autoGenerate = options.autoGenerateKey,\n        autoGenerateKey = _options$autoGenerate === void 0 ? true : _options$autoGenerate;\n\n    if (!_isNil(childKey)) {\n      // apply and consume the childKey\n      props.key = typeof childKey === 'function' ? childKey(props) : childKey;\n      delete props.childKey;\n    } else if (autoGenerateKey && (valIsString || valIsNumber)) {\n      // use string/number shorthand values as the key\n      props.key = val;\n    }\n  } // ----------------------------------------\n  // Create Element\n  // ----------------------------------------\n  // Clone ReactElements\n\n\n  if (valIsReactElement) return cloneElement(val, props); // Create ReactElements from built up props\n\n  if (valIsPrimitiveValue || valIsPropsObject) return React.createElement(Component, props); // Call functions with args similar to createElement()\n\n  if (valIsFunction) return val(Component, props, props.children);\n  /* eslint-enable react/prop-types */\n} // ============================================================\n// Factory Creators\n// ============================================================\n\n/**\n * Creates a `createShorthand` function that is waiting for a value and options.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @returns {function} A shorthand factory function waiting for `val` and `defaultProps`.\n */\n\ncreateShorthand.handledProps = [];\nexport function createShorthandFactory(Component, mapValueToProps) {\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthandFactory() Component must be a string or function.');\n  }\n\n  return function (val, options) {\n    return createShorthand(Component, mapValueToProps, val, options);\n  };\n} // ============================================================\n// HTML Factories\n// ============================================================\n\nexport var createHTMLDivision = createShorthandFactory('div', function (val) {\n  return {\n    children: val\n  };\n});\nexport var createHTMLIframe = createShorthandFactory('iframe', function (src) {\n  return {\n    src: src\n  };\n});\nexport var createHTMLImage = createShorthandFactory('img', function (val) {\n  return {\n    src: val\n  };\n});\nexport var createHTMLInput = createShorthandFactory('input', function (val) {\n  return {\n    type: val\n  };\n});\nexport var createHTMLLabel = createShorthandFactory('label', function (val) {\n  return {\n    children: val\n  };\n});\nexport var createHTMLParagraph = createShorthandFactory('p', function (val) {\n  return {\n    children: val\n  };\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}