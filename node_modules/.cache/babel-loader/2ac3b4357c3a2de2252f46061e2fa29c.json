{"ast":null,"code":"var constant = require('./constant'),\n  createInverter = require('./_createInverter'),\n  identity = require('./identity');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function (result, value, key) {\n  if (value != null && typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n  result[value] = key;\n}, constant(identity));\nmodule.exports = invert;","map":{"version":3,"names":["constant","require","createInverter","identity","objectProto","Object","prototype","nativeObjectToString","toString","invert","result","value","key","call","module","exports"],"sources":["/home/spencer/Personal/Bibtex-web-database-master/client/node_modules/lodash/invert.js"],"sourcesContent":["var constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAY,CAAC;EAChCC,cAAc,GAAGD,OAAO,CAAC,mBAAmB,CAAC;EAC7CE,QAAQ,GAAGF,OAAO,CAAC,YAAY,CAAC;;AAEpC;AACA,IAAIG,WAAW,GAAGC,MAAM,CAACC,SAAS;;AAElC;AACA;AACA;AACA;AACA;AACA,IAAIC,oBAAoB,GAAGH,WAAW,CAACI,QAAQ;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,MAAM,GAAGP,cAAc,CAAC,UAASQ,MAAM,EAAEC,KAAK,EAAEC,GAAG,EAAE;EACvD,IAAID,KAAK,IAAI,IAAI,IACb,OAAOA,KAAK,CAACH,QAAQ,IAAI,UAAU,EAAE;IACvCG,KAAK,GAAGJ,oBAAoB,CAACM,IAAI,CAACF,KAAK,CAAC;EAC1C;EAEAD,MAAM,CAACC,KAAK,CAAC,GAAGC,GAAG;AACrB,CAAC,EAAEZ,QAAQ,CAACG,QAAQ,CAAC,CAAC;AAEtBW,MAAM,CAACC,OAAO,GAAGN,MAAM"},"metadata":{},"sourceType":"script"}