{"ast":null,"code":"import { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, PROD_TYPE } from \"../../grammar/lookahead\";\nimport { forEach, has, isES2015MapSupported } from \"../../../utils/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX } from \"../../grammar/keys\";\nimport { collectMethods, getProductionDslName } from \"../../grammar/gast/gast\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nvar LooksAhead = /** @class */function () {\n  function LooksAhead() {}\n  LooksAhead.prototype.initLooksAhead = function (config) {\n    this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\") ? config.dynamicTokensEnabled : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n    this.maxLookahead = has(config, \"maxLookahead\") ? config.maxLookahead : DEFAULT_PARSER_CONFIG.maxLookahead;\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    this.lookAheadFuncsCache = isES2015MapSupported() ? new Map() : [];\n    // Performance optimization on newer engines that support ES6 Map\n    // For larger Maps this is slightly faster than using a plain object (array in our case).\n    /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n    if (isES2015MapSupported()) {\n      this.getLaFuncFromCache = this.getLaFuncFromMap;\n      this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n    } else {\n      this.getLaFuncFromCache = this.getLaFuncFromObj;\n      this.setLaFuncCache = this.setLaFuncUsingObj;\n    }\n  };\n  LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n    var _this = this;\n    forEach(rules, function (currRule) {\n      _this.TRACE_INIT(currRule.name + \" Rule Lookahead\", function () {\n        var _a = collectMethods(currRule),\n          alternation = _a.alternation,\n          repetition = _a.repetition,\n          option = _a.option,\n          repetitionMandatory = _a.repetitionMandatory,\n          repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator,\n          repetitionWithSeparator = _a.repetitionWithSeparator;\n        forEach(alternation, function (currProd) {\n          var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n          _this.TRACE_INIT(\"\" + getProductionDslName(currProd) + prodIdx, function () {\n            var laFunc = buildLookaheadFuncForOr(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n            var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n            _this.setLaFuncCache(key, laFunc);\n          });\n        });\n        forEach(repetition, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, PROD_TYPE.REPETITION, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(option, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, PROD_TYPE.OPTION, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionMandatory, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionMandatoryWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n      });\n    });\n  };\n  LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n    var _this = this;\n    this.TRACE_INIT(\"\" + dslMethodName + (prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n      var laFunc = buildLookaheadFuncForOptionalProd(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n      var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n      _this.setLaFuncCache(key, laFunc);\n    });\n  };\n  LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n    return buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);\n  };\n  LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    return buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n  };\n  // this actually returns a number, but it is always used as a string (object prop key)\n  LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n    var currRuleShortName = this.getLastExplicitRuleShortName();\n    return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n  };\n  /* istanbul ignore next */\n  LooksAhead.prototype.getLaFuncFromCache = function (key) {\n    return undefined;\n  };\n  LooksAhead.prototype.getLaFuncFromMap = function (key) {\n    return this.lookAheadFuncsCache.get(key);\n  };\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n  LooksAhead.prototype.getLaFuncFromObj = function (key) {\n    return this.lookAheadFuncsCache[key];\n  };\n  /* istanbul ignore next */\n  LooksAhead.prototype.setLaFuncCache = function (key, value) {};\n  LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n    this.lookAheadFuncsCache.set(key, value);\n  };\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n  LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n    this.lookAheadFuncsCache[key] = value;\n  };\n  return LooksAhead;\n}();\nexport { LooksAhead };","map":{"version":3,"names":["buildAlternativesLookAheadFunc","buildLookaheadFuncForOptionalProd","buildLookaheadFuncForOr","buildSingleAlternativeLookaheadFunction","PROD_TYPE","forEach","has","isES2015MapSupported","DEFAULT_PARSER_CONFIG","AT_LEAST_ONE_IDX","AT_LEAST_ONE_SEP_IDX","getKeyForAutomaticLookahead","MANY_IDX","MANY_SEP_IDX","OPTION_IDX","OR_IDX","collectMethods","getProductionDslName","LooksAhead","prototype","initLooksAhead","config","dynamicTokensEnabled","maxLookahead","lookAheadFuncsCache","Map","getLaFuncFromCache","getLaFuncFromMap","setLaFuncCache","setLaFuncCacheUsingMap","getLaFuncFromObj","setLaFuncUsingObj","preComputeLookaheadFunctions","rules","_this","currRule","TRACE_INIT","name","_a","alternation","repetition","option","repetitionMandatory","repetitionMandatoryWithSeparator","repetitionWithSeparator","currProd","prodIdx","idx","laFunc","hasPredicates","lookAheadBuilderForAlternatives","key","fullRuleNameToShort","computeLookaheadFunc","REPETITION","OPTION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","rule","prodOccurrence","prodKey","prodType","prodMaxLookahead","dslMethodName","lookAheadBuilderForOptional","alt","tokenMatcher","alts","dslMethodIdx","occurrence","currRuleShortName","getLastExplicitRuleShortName","undefined","get","value","set"],"sources":["/home/spencer/Personal/Bibtex-web-database-master/client/node_modules/chevrotain/lib_esm/src/parse/parser/traits/looksahead.js"],"sourcesContent":["import { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, PROD_TYPE } from \"../../grammar/lookahead\";\nimport { forEach, has, isES2015MapSupported } from \"../../../utils/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX } from \"../../grammar/keys\";\nimport { collectMethods, getProductionDslName } from \"../../grammar/gast/gast\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nvar LooksAhead = /** @class */ (function () {\n    function LooksAhead() {\n    }\n    LooksAhead.prototype.initLooksAhead = function (config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n        this.lookAheadFuncsCache = isES2015MapSupported() ? new Map() : [];\n        // Performance optimization on newer engines that support ES6 Map\n        // For larger Maps this is slightly faster than using a plain object (array in our case).\n        /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n        if (isES2015MapSupported()) {\n            this.getLaFuncFromCache = this.getLaFuncFromMap;\n            this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n        }\n        else {\n            this.getLaFuncFromCache = this.getLaFuncFromObj;\n            this.setLaFuncCache = this.setLaFuncUsingObj;\n        }\n    };\n    LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n        var _this = this;\n        forEach(rules, function (currRule) {\n            _this.TRACE_INIT(currRule.name + \" Rule Lookahead\", function () {\n                var _a = collectMethods(currRule), alternation = _a.alternation, repetition = _a.repetition, option = _a.option, repetitionMandatory = _a.repetitionMandatory, repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator, repetitionWithSeparator = _a.repetitionWithSeparator;\n                forEach(alternation, function (currProd) {\n                    var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    _this.TRACE_INIT(\"\" + getProductionDslName(currProd) + prodIdx, function () {\n                        var laFunc = buildLookaheadFuncForOr(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n                        var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        _this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, PROD_TYPE.REPETITION, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, PROD_TYPE.OPTION, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    };\n    LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        var _this = this;\n        this.TRACE_INIT(\"\" + dslMethodName + (prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n            var laFunc = buildLookaheadFuncForOptionalProd(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n            var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            _this.setLaFuncCache(key, laFunc);\n        });\n    };\n    LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n        return buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);\n    };\n    LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n        return buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n    };\n    // this actually returns a number, but it is always used as a string (object prop key)\n    LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n        var currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.getLaFuncFromCache = function (key) {\n        return undefined;\n    };\n    LooksAhead.prototype.getLaFuncFromMap = function (key) {\n        return this.lookAheadFuncsCache.get(key);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.getLaFuncFromObj = function (key) {\n        return this.lookAheadFuncsCache[key];\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.setLaFuncCache = function (key, value) { };\n    LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n        this.lookAheadFuncsCache[key] = value;\n    };\n    return LooksAhead;\n}());\nexport { LooksAhead };\n//# sourceMappingURL=looksahead.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module"}