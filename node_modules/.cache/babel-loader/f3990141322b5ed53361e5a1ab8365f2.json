{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { customPropTypes } from '../../lib';\nimport getNodeRefFromProps from './lib/getNodeRefFromProps';\nimport handleClassNamesChange from './lib/handleClassNamesChange';\nimport NodeRegistry from './lib/NodeRegistry';\nvar nodeRegistry = new NodeRegistry();\n/**\n * A component that allows to manage classNames on a DOM node in declarative manner.\n */\n\nvar MountNode = /*#__PURE__*/\nfunction (_Component) {\n  _inherits(MountNode, _Component);\n  function MountNode() {\n    _classCallCheck(this, MountNode);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MountNode).apply(this, arguments));\n  }\n  _createClass(MountNode, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(_ref) {\n      var nextClassName = _ref.className;\n      var currentClassName = this.props.className;\n      return nextClassName !== currentClassName;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nodeRef = getNodeRefFromProps(this.props);\n      nodeRegistry.add(nodeRef, this);\n      nodeRegistry.emit(nodeRef, handleClassNamesChange);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      nodeRegistry.emit(getNodeRefFromProps(this.props), handleClassNamesChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var nodeRef = getNodeRefFromProps(this.props);\n      nodeRegistry.del(nodeRef, this);\n      nodeRegistry.emit(nodeRef, handleClassNamesChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n  return MountNode;\n}(Component);\n_defineProperty(MountNode, \"handledProps\", [\"className\", \"node\"]);\nexport { MountNode as default };\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject])\n} : {};","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_defineProperty","PropTypes","Component","customPropTypes","getNodeRefFromProps","handleClassNamesChange","NodeRegistry","nodeRegistry","MountNode","_Component","apply","arguments","key","value","shouldComponentUpdate","_ref","nextClassName","className","currentClassName","props","componentDidMount","nodeRef","add","emit","componentDidUpdate","componentWillUnmount","del","render","default","propTypes","process","env","NODE_ENV","string","node","oneOfType","domNode","refObject"],"sources":["/home/spencer/Personal/Bibtex-web-database-master/client/node_modules/semantic-ui-react/dist/es/addons/MountNode/MountNode.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { customPropTypes } from '../../lib';\nimport getNodeRefFromProps from './lib/getNodeRefFromProps';\nimport handleClassNamesChange from './lib/handleClassNamesChange';\nimport NodeRegistry from './lib/NodeRegistry';\nvar nodeRegistry = new NodeRegistry();\n/**\n * A component that allows to manage classNames on a DOM node in declarative manner.\n */\n\nvar MountNode =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MountNode, _Component);\n\n  function MountNode() {\n    _classCallCheck(this, MountNode);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MountNode).apply(this, arguments));\n  }\n\n  _createClass(MountNode, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(_ref) {\n      var nextClassName = _ref.className;\n      var currentClassName = this.props.className;\n      return nextClassName !== currentClassName;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nodeRef = getNodeRefFromProps(this.props);\n      nodeRegistry.add(nodeRef, this);\n      nodeRegistry.emit(nodeRef, handleClassNamesChange);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      nodeRegistry.emit(getNodeRefFromProps(this.props), handleClassNamesChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var nodeRef = getNodeRefFromProps(this.props);\n      nodeRegistry.del(nodeRef, this);\n      nodeRegistry.emit(nodeRef, handleClassNamesChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return MountNode;\n}(Component);\n\n_defineProperty(MountNode, \"handledProps\", [\"className\", \"node\"]);\n\nexport { MountNode as default };\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject])\n} : {};"],"mappings":"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"},"metadata":{},"sourceType":"module"}